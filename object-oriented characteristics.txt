객체지향 4대 특성

1. 캡슐화 (Encapsulation) 
    - 객체의 속성을 보호하기 위해 사용한다.
    - 속성이 선언되었으나, 이의 상태를 변경하는 method가 없다면 잘못 선언된 속성이다.
        Getter/Setter 메서드를 통해서 처리하도록 한다.    
 ⇒ 추상화를 제공한다. 실제로 method를 어떻게 동작하는지 외부에서는 이해할 필요가 없으며, 
단순 호출만으로 해당 기능을 실행할 수 있고, 이를 통해 객체 단위로 프로그램 설계가 가능하다.

    
2. 상속 (Inheritance) = 재사용 + 확장
    - 기존의 클래스로 새로운 클래스를 작성하는 것
    ⇒  최상위 클래스의 구조를 보고 하위 클래스 동작 이해 할 수 있고 해당 클래스에서 필요한 
         속성 및 메서드를 모두 정의하지 않고 상속받아서 사용하는 재활용성 및 확장성에 좋다.
    
3.  다형성 (Polymorphism) = 사용편의
    - 하나의 개체가 여러 개의 형태로 변화하는 것
    - 조상 타입 참조변수로 자손타입 객체를 다루는 것

4. 추상화 (Abstraction) = 모델링
    추상화란, 구체적으로 공통적인 부분, 특정 특성을 분리해서 재조합 하는 것이다.
    다형성, 상속 모두 추상화에 속한다.